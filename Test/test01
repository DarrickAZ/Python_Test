# print absolute value of an integer:
a = -1
if a >= 0:
    print (a)
else:
    print (-a)
print ('I\'m ok.')
print (True)

#pyhon中变量可以不论类型，反复赋值（Java中不可以）
a = 123 # a是整数
print (a)
a = 'ABC' # a变为字符串
print (a)

#常量
PI = 3.14159265359
print (PI)
print(10/3)
print(10.0/3)
print(10%3)

#ASCII编码转换
print(ord('A'))
print(chr(65))

#Unicode支持
#b'\xe4\xb8\xad\xe6\x96\x87'
print(u'中文'.encode('utf-8'))

#len()返回字符长度
#3
print(len(u'ABC'))
#6
print(len('\xe4\xb8\xad\xe6\x96\x87'))

#格式化
print('Hi, %s, you have $%d.' % ('Michael', 1000000))
print('Age: %s. Gender: %s' % (25, True))

#使用list和tuple(元组、重数)
#list
classmates = ['Leo','Darrick','Frank']
#['Leo', 'Darrick', 'Frank']
print(classmates)
#3
print(len(classmates))
#根据索引下标取值
print(classmates[0])
print(classmates[len(classmates)-1])
#也可以用负数作索引值
#Leo
print(classmates[-3])

#往list末尾追加元素
classmates.append("Admin")
print(classmates)
#将元素插入list指定位置
classmates.insert(1,'Jack')
print(classmates)
#删除list末尾元素
classmates.pop()
print(classmates)
#指定位置删除list元素
classmates.pop(1)
print(classmates)
#替换某个元素
classmates[1]='safari'
print(classmates)

#list里面的元素的数据类型也可以不同
L=['Apple',1,True]
print(L)
#list元素也可以是另一个list
S=['python','java',['asp','php'],'scheme']
print(S)
#asp
print(S[2][0])
#如果一个list中一个元素也没有，就是一个空list,长度为0
L=[]
#0
print(len(L))

#tuple(和list类似，只是一旦初始化就无法修改)
school=('A','B','C')
print(school)
#TypeError: 'tuple' object does not support item assignment
#school[0]='AA'
print(school[1])
#定义一个空的tuple
t=()
#()
print(t)
#定义一个只有1个元素的tuple,用逗号来消除()的歧义
t=(1,)
#(1,)
print(t)

#可变的tuple
t=('a','b',['A','B'])
#A
print(t[2][0])
t[2][0]='X'
t[2][1]='Y'
#('a', 'b', ['X', 'Y'])  注意变得不是该tuple，而是list ['x','y']的元素
print(t)


###条件判断和循环
#条件判断
age = 17
if age >= 18:
    print ('your age is', age)
    print ('adult')
elif age>16:
    print('do nothing')
else:
    print('too young')
#使用input()进行输入
#TypeError: '<' not supported between instances of 'str' and 'int'
#input输入都为字符串，不能直接和整数进行比较，需要把str转为整数
#birth=input('birth:')
#s=input('birth:')
#birth=int(s)
#if birth <2000:
 #   print('00前')
#else:
#    print('00后')

#循环
names=['Leo','Darrick','Frank']
for name in names:
    print(name)
# for x in ... 循环就是把每个元素代入变量
sum=0
for x in [1,2,3,4,5,6,7,8,9]:
    sum=sum+x
    print('current sum >>> ',sum)
print(sum)
#range() 生成一个范围内的整数序列
#range(0,5)
print(range(5))
#[0, 1, 2, 3, 4]
print(list(range(5)))
#range(101) 就可以生成0~100的整数序列
sum = 0
for x in range(101):
    sum = sum+x
print(sum)
#while循环
sum = 0
n=99
while n > 0:
    sum = sum +n
    n=n-2
print(sum)

#使用dict和set
#dict,要保证hash的正确性，作为key的对象就不能变，而list是可变的，就不能作为key
d={'Darrick':95,'Leo':99}
# 95
print(d['Darrick'])
#通过key放入
d['Admin']=67
print(d['Admin'])
print(len(d))
#一个key只能对应一个value,多次对一个key放入，后面的值会把前面的值冲掉
d['Admin']=88
#88
print(d['Admin'])
#如果key不存在的话，就会报错
#KeyError: 'NotFound',如果出错，程序将不再往下执行
#print(d['NotFound'])
#判断key是否存在于dict中
#False
print('NotFound' in d)
#二是通过dict的get方法进行判断
#None
print(d.get('NotFound'))
#95
print(d.get('Darrick'))
#删除一个key,用pop(key)方法
d.pop('Darrick')
#{'Leo': 99, 'Admin': 88}
print(d)
#list是可变的不能为key
# key=[1,2,3]
# d[key]='a list'
# #TypeError: unhashable type: 'list'
# print(d )

#set
s=set([1,2,3])
# {1,2,3}
print(s)
s=set([1,1,2,3,4,4])
#{1, 2, 3, 4} set为不可重复，自动过滤重复元素
print(s)
#通过add(key)进行添加
s.add(5)
print(s)
#重复添加无效
s.add(5)
print(s)
#通过remove(key)，可以删除元素
s.remove(5)
print(s)

#set可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集，并集的相关操作
s1=set([1,2,3])
s2=set([2,3,4])
# {2, 3}
print(s1&s2)
#{1, 2, 3, 4}
print(s1 | s2)

##再议不可变对象
#str是不变对象，而list是可变对象
a=['c','b','a']
a.sort()
# ['a', 'b', 'c']
print(a)
#对于不可变对象str的操作
a='abc'
a.replace('a','A')
#abc
print(a)










































